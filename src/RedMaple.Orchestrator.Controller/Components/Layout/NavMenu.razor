@using RedMaple.Orchestrator.Contracts.Node
@inject INodeManager nodeManager
@rendermode InteractiveServer

<MudPaper Width="250px" Class="py-3" Elevation="0">
    <MudNavMenu>
        <div class="container-logo">
            <div><img src="logo.png" alt="logo"/></div>
            <div class="title">
                <div>
                    <MudText Typo="Typo.h6" Class="px-4">RedMaple</MudText>
                    <MudText Typo="Typo.subtitle1" Class="px-4">Orchestration</MudText>
                </div>
            </div>
        </div>
        <MudDivider Class="my-2" />
        <MudNavLink Href="/certificates">Certificates</MudNavLink>

        <MudNavGroup Title="Nodes" Expanded="true">

            @foreach (var node in _nodes)
            {
                <MudNavGroup Title="@node.IpAddress" Expanded="true">
                    <MudNavLink Href="@GetNodeIngressLink(node)">Ingress</MudNavLink>
                    <MudNavLink Href="@GetNodeContainersLink(node)">Containers</MudNavLink>
                    <MudNavLink Href="@GetNodeDnsLink(node)">DNS</MudNavLink>
                    <MudNavLink Href="@GetNodeSettingsLink(node)">Settings</MudNavLink>
                </MudNavGroup>
            }
        </MudNavGroup>
    </MudNavMenu>
</MudPaper>

@code {
    private List<NodeInfo> _nodes = new();
    
    private string GetNodeIngressLink(NodeInfo node)
    {
        return $"/node/{node.Id}/ingress";
    }
    private string GetNodeContainersLink(NodeInfo node)
    {
        return $"/node/{node.Id}/containers";
    }
    private string GetNodeDnsLink(NodeInfo node)
    {
        return $"/node/{node.Id}/dns";
    }
    private string GetNodeSettingsLink(NodeInfo node)
    {
        return $"/node/{node.Id}/settings";
    }

    protected override async Task OnInitializedAsync()
    {
        _nodes = await nodeManager.GetNodesAsync();
    }
}