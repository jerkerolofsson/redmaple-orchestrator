@page "/ingress"
@using MudBlazor
@using RedMaple.Orchestrator.Contracts
@using RedMaple.Orchestrator.Controller.Domain
@rendermode InteractiveServer
@inject IIngressManager ingressManager

<h1>Reverse Proxy</h1>

@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Ingress Port</th>
            <th>Schema</th>
            <th>Destination IP</th>
            <th>Destination Port</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var service in _services)
        {
            <tr>
                <td><a href="@(service.Schema)://@(service.DomainName):@(service.IngressPort)">@service.DomainName</a></td>
                <td>@service.IngressPort</td>
                <td>@service.Schema</td>
                <td>@service.DestinationIp</td>
                <td>@service.DestinationPort</td>
                <td>
                </td>
            </tr>
        }

    </tbody>
</table>


@code {
    private List<IngressServiceDescription> _services = new();

    protected override async Task OnInitializedAsync()
    {
        // Add a services
        _services = await ingressManager.GetServicesAsync();
        if (_services.Count == 0)
        {
            

            _services = await ingressManager.GetServicesAsync();
        }
        
    }
}